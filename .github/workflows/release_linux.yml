name: Release for Linux

on:
  push:
    tags:
      - '*'

jobs:

  release:

    strategy:
      matrix:
        # Build on not-the-latest to keep dependency versions modest.
        os: [ubuntu-22.04, ubuntu-22.04-arm]

    runs-on: ${{ matrix.os }}

    permissions:
        contents: write

    steps:

      - name: Set up a build environment.
        run: |
          sudo apt update
          sudo apt install -y build-essential cmake zip
          sudo apt install -y zlib1g-dev liblz4-dev tk-dev

      - name: Check out our dlsh code for the current tag..
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Install TCL 9 to the build environment.
        run: |
          cd deps/tcl/unix/
          ./configure
          make
          sudo make install

      - name: Install Jansson to the build environment.
        run: |
          cd deps/jansson/
          cmake -B build
          cmake --build build
          sudo cmake --install build

      - name: Install Libharu to the build environment (static and dynamic libs both).
        run: |
          cd deps/libharu/
          cmake -D BUILD_SHARED_LIBS=OFF -D CMAKE_POSITION_INDEPENDENT_CODE=ON -B build
          cmake --build build
          sudo cmake --install build

      - name: Checkout dependencies not available from public repos
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository_owner }}/dlsh-dependencies
          token: ${{ secrets.DLSH_DEPENDENCIES_TOKEN }}
          path: deps/dlsh-dependencies

      - name: Build dlsh and package for release.
        run: |
          cmake -D PROJECT_VERSION=${{ github.ref_name }} -B build -D CPACK_DEB_COMPONENT_INSTALL=ON -D CPACK_COMPONENTS_ALL="dlsh;dg"
          cmake --build build
          cpack -G DEB --config build/CPackConfig.cmake

          cmake -B build -D CMAKE_INSTALL_PREFIX=build/dlsh-zip -D DLSH_DEPENDENCIES=deps/dlsh-dependencies
          cmake --install build --component dlsh-zip
          cd build/dlsh-zip/
          zip -r dlsh-${{ github.ref_name }}-Linux-$(dpkg --print-architecture).zip lib/

      - name: Create a GitHub release for the current tag and artifacts.
        uses: ncipollo/release-action@v1
        with:
          artifacts: "*.deb, build/dlsh-zip/*.zip"
          body: libs, headers and dependencies for dlsh version ${{ github.ref_name }}
          generateReleaseNotes: true
          allowUpdates: true
